DataFileName <- "getdata-projectfiles-UCI HAR Dataset.zip"
## Download data if data doesn't exists:
if (!file.exists(DataFileName)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, DataFileName, method="curl")
}
## Unzip data if data folder doesn't exists:
if (!file.exists("UCI HAR Dataset")) {
unzip(DataFileName)
}
DataFileName <- "getdata-projectfiles-UCI HAR Dataset.zip"
## Download data if data doesn't exists:
if (!file.exists(DataFileName)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, DataFileName)
}
## Unzip data if data folder doesn't exists:
if (!file.exists("UCI HAR Dataset")) {
unzip(DataFileName)
}
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
activityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
View(activityLabels)
features = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
features[,2] = gsub('-mean', 'Mean', features[,2])
features[,2] = gsub('-std', 'Std', features[,2])
features[,2] = gsub('[-()]', '', features[,2])
View(features)
View(features)
features = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
View(features)
table(features)
summary(features)
str(features)
View(features)
rm(list=ls())
fileurl2 = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
dst2 = '/Users/zhusiqi/Desktop/coursera/R_jhu/geting_and_cleaning_data/week3/q2.jpg'
download.file(fileurl2, dst2, mode = 'wb')
data2 = readJPEG(dst2, native = TRUE)
quantile(data2, probs = c(0.3, 0.8))
dst2 = 'q2.jpg'
download.file(fileurl2, dst2, mode = 'wb')
data2 = readJPEG(dst2, native = TRUE)
quantile(data2, probs = c(0.3, 0.8))
library("jpeg", lib.loc="~/R/win-library/3.2")
data2 = readJPEG(dst2, native = TRUE)
quantile(data2, probs = c(0.3, 0.8))
rm(list=ls())
fileurl3a = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
dst3a = 'q3a.csv'
fileurl3b = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
dst3b = 'q3b.csv'
download.file(fileurl3a, dst3a)
download.file(fileurl3b, dst3b)
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
library("plyr", lib.loc="~/R/win-library/3.2")
install.packages("fread")
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
library("plyr", lib.loc="~/R/win-library/3.2")
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
detach("package:plyr", unload=TRUE)
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
library("data.table", lib.loc="~/R/win-library/3.2")
library(data.table)
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
download.file(fileurl3a, dst3a, mode='wb')
download.file(fileurl3b, dst3b, mode='wb)
download.file(fileurl3b, dst3b, mode='wb')
gdp = fread(dst3a, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
edu = fread(dst3b)
merge = merge(gdp, edu, by = 'CountryCode')
nrow(merge)
View(gdp)
View(gdp)
View(edu)
View(merge)
arrange(merge, desc(Rank))[13, Economy]
arrange(merge, desc(Rank))[13, Economy]
library("plyr", lib.loc="~/R/win-library/3.2")
arrange(merge, desc(Rank))[13, Economy]
setwd("~/R")
View(features)
View(activityLabels)
View(features)
rm(list=ls())
## Download data if data doesn't exists:
if (!file.exists(DataFileName)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, DataFileName)
}
## Unzip data if data folder doesn't exists:
if (!file.exists("UCI HAR Dataset")) {
unzip(DataFileName)
}
# Load activity labels from "activity_labels.txt"
ActivityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
# Read features from "features.txt"
FeaturesLabels = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
View(FeaturesLabels)
View(FeaturesLabels)
View(ActivityLabels)
View(FeaturesLabels)
# Load and process test data.
tbl_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
tbl_y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
tbl_subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(tbl_X_test) = FeaturesLabels
View(tbl_subject_test)
View(tbl_X_test)
View(tbl_X_test)
library("data.table", lib.loc="~/R/win-library/3.2")
class(tbl_X_test)
rm(list=ls())
# Load activity labels from "activity_labels.txt"
ActivityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
# Read features from "features.txt"
FeaturesLabels = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
# Load and process test data.
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
DF_y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
DF_subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
names(DF_X_test) = FeaturesLabels
View(DF_X_test)
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
View(DF_X_test)
View(FeaturesLabels)
names(DF_X_test) = FeaturesLabels[,2]
View(DF_X_test)
View(DF_subject_test)
View(DF_y_test)
DF_y_test[,2] = ActivityLabels[DF_y_test[,1]]
View(ActivityLabels)
DF_y_test[,2] = ActivityLabels[DF_y_test[,1]]
View(ActivityLabels)
View(DF_X_test)
DF_y_test[,2] = ActivityLabels[DF_y_test[,1]]
View(ActivityLabels)
View(DF_y_test)
ActivityLabels[DF_y_test[,1]]
ActivityLabels[DF_y_test
]
ActivityLabels[DF_y_test[,2]]
library("reshape2", lib.loc="~/R/win-library/3.2")
DF_y_test[,2] = ActivityLabels[DF_y_test[,1]]
detach("package:reshape2", unload=TRUE)
detach("package:data.table", unload=TRUE)
names(DF_X_test) = FeaturesLabels[,2]
names(DF_y_test) = "Activity_ID"
names(DF_subject_test) = "subject"
View(DF_y_test)
View(DF_subject_test)
View(DF_X_test)
# Load activity labels + features
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt")
activityLabels[,2] <- as.character(activityLabels[,2])
features <- read.table("UCI HAR Dataset/features.txt")
features[,2] <- as.character(features[,2])
# Extract only the data on mean and standard deviation
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names = gsub('-std', 'Std', featuresWanted.names)
featuresWanted.names <- gsub('[-()]', '', featuresWanted.names)
# Load the datasets
train <- read.table("UCI HAR Dataset/train/X_train.txt")[featuresWanted]
trainActivities <- read.table("UCI HAR Dataset/train/Y_train.txt")
trainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt")
train <- cbind(trainSubjects, trainActivities, train)
rm(list=ls())
features <- read.table("UCI HAR Dataset/features.txt")
View(features)
features[,2] <- as.character(features[,2])
View(features)
featuresWanted <- grep(".*mean.*|.*std.*", features[,2])
View(features)
featuresWanted.names <- features[featuresWanted,2]
featuresWanted.names
featuresWanted.names = gsub('-mean', 'Mean', featuresWanted.names)
featuresWanted.names
rm(list=ls())
## install required package if it doesn't exists
if (!require("data.table")) {
install.packages("data.table")
}
## Download data if data doesn't exists:
DataFileName <- "getdata-projectfiles-UCI HAR Dataset.zip"
if (!file.exists(DataFileName)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, DataFileName)
}
## Unzip data if data folder doesn't exists:
if (!file.exists("UCI HAR Dataset")) {
unzip(DataFileName)
}
## Load activity labels from "activity_labels.txt"
ActivityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
## Read features labels from "features.txt"
FeaturesLabels = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
## Load test data.
DF_subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
DF_y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
## Label test data
names(DF_subject_test) = "subject"
names(DF_y_test) = "Activity_ID"
names(DF_X_test) = FeaturesLabels[,2]
## pick only the the mean and standard deviation from each measurement of X_Test
required_features <- grepl("mean|std", FeaturesLabels)
DF_X_test = DF_X_test[,required_features]
View(DF_X_test)
install.packages("ggplot2")
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
View(DF_y_test)
View(DF_subject_test)
names(DF_subject_test) = "Subject"
View(DF_subject_test)
names(DF_y_test) = "Activity_ID"
names(DF_X_test) = FeaturesLabels[,2]
View(DF_X_test)
## pick only the the mean and standard deviation from each measurement of X_Test
required_features <- grepl("mean|std", FeaturesLabels)
View(FeaturesLabels)
required_features <- grepl("mean|std", FeaturesLabels[,2])
DF_X_test = DF_X_test[,required_features]
View(DF_X_test)
## combine all test data into one data frame
DF_CombinedTestData <- cbind(DF_subject_test, DF_y_test, DF_X_test)
View(DF_CombinedTestData)
DF_subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
DF_y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
DF_X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
## Label train data
names(DF_subject_train) = "Subject"
names(DF_y_train) = "Activity_ID"
names(DF_X_trian) = FeaturesLabels[,2]
## pick only the the mean and standard deviation from each measurement of X_trian
DF_X_trian = DF_X_trian[,required_features]
View(DF_X_train)
View(FeaturesLabels)
names(DF_X_trian) = FeaturesLabels[,2]
View(DF_X_train)
View(DF_y_train)
View(DF_subject_train)
names(DF_X_trian) = FeaturesLabels[,2]
View(DF_X_train)
names(DF_X_train) = FeaturesLabels[,2]
View(DF_X_train)
## pick only the the mean and standard deviation from each measurement of X_trian
DF_X_trian = DF_X_trian[,required_features]
DF_X_trian = DF_X_train[,required_features]
## combine all train data into one data frame
DF_CombinedTestData <- cbind(DF_subject_train, DF_y_train, DF_X_train)
rm(list=ls())
## install required package if it doesn't exists
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
rm(list=ls())
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
View(DF_X_train)
View(DF_X_test)
View(DF_CombinedTestData)
rm(DF_X_test)
rm(DF_y_test,DF_subject_test)
rm(list=ls())
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
rm(DF_subject_test,DF_y_test,DF_X_test,DF_subject_train,DF_y_train,DF_X_train)
rm(list=ls())
rm(DF_subject_test,DF_y_test,DF_X_test,DF_subject_train,DF_y_train,DF_X_train)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
View(DF_CombinedData)
View(DF_CombinedData)
View(DF_CombinedData)
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
View(DF_y_test)
View(FeaturesLabels)
View(DF_y_test)
View(FeaturesLabels)
View(FeaturesLabels)
FeaturesLabels.names <- gsub('-mean', 'Mean', FeaturesLabels.names)
FeaturesLabels.names <- gsub('-std', 'STD', FeaturesLabels.names)
FeaturesLabels.names <- gsub('()', '', FeaturesLabels.names)
View(FeaturesLabels)
FeaturesLabels.names = gsub('-mean', 'Mean', FeaturesLabels.names)
FeaturesLabels.names = gsub('-mean', 'Mean', FeaturesLabels.names)
FeaturesLabels.names = gsub('-mean', 'Mean', FeaturesLabels.names[,2])
FeaturesLabels.names = gsub("-mean", "Mean", FeaturesLabels.names[,2])
View(FeaturesLabels)
FeaturesLabels[,2] = gsub("-mean", "Mean", FeaturesLabels[,2])
View(FeaturesLabels)
FeaturesLabels[,2] = gsub("-mean", "Mean", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub('-std', 'STD', FeaturesLabels[,2])
FeaturesLabels[,2] = gsub('()', '', FeaturesLabels[,2])
View(FeaturesLabels)
FeaturesLabels[,2] = gsub("-mean", "Mean", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub("-std", "STD", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub("()", "", FeaturesLabels[,2])
View(FeaturesLabels)
FeaturesLabels[,2] = gsub("[()]", "", FeaturesLabels[,2])
View(FeaturesLabels)
rm(list=ls())
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
View(DF_CombinedData)
id_labels   = c("subject", "Activity_ID", "Activity_Label")
data_labels = setdiff(colnames(DF_CombinedData), id_labels)
id_labels   = c("Subject", "Activity_ID", "Activity_Label")
data_labels = setdiff(colnames(DF_CombinedData), id_labels)
melt_data      = melt(DF_CombinedData, id = id_labels, measure.vars = data_labels)
View(DF_CombinedData)
melt_data      = melt(DF_CombinedData, id = id_labels, measure.vars = data_labels)
View(DF_CombinedData)
View(DF_CombinedData)
ActivityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
## Read features labels from "features.txt"
FeaturesLabels = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
## Appropriately labels the data set with descriptive variable names
FeaturesLabels[,2] = gsub("-mean", "Mean", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub("-std", "STD", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub("[()]", "", FeaturesLabels[,2])
## Load test data.
DF_subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
DF_y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
DF_y_test[,2] = ActivityLabels[DF_y_test[,1]]
id_labels   = c("subject", "Activity_ID", "Activity_Label")
DF_y_test[,2] = ActivityLabels[DF_y_test[,1]]
View(ActivityLabels)
View(DF_y_test)
View(DF_y_test)
View(ActivityLabels)
View(ActivityLabels)
ActivityLabels[DF_y_test[,1]]
DF_y_test[,1]
ActivityLabels[1,]
ActivityLabels[,1]
ActivityLabels[,2]
ActivityLabels[,DF_y_test[,1]]
ActivityLabels[DF_y_test[,1]]
ActivityLabels[,2,DF_y_test[,1]]
View(DF_y_test)
DF_y_test[,2] = ActivityLabels[,2]
View(FeaturesLabels)
ActivityLabels$v2[match(FeaturesLabels$v1,ActivityLabels$V2)]
ActivityLabels$V2[match(FeaturesLabels$V1,ActivityLabels$V2)]
ActivityLabels$V2[match(FeaturesLabels$V1,ActivityLabels$V1)]
View(FeaturesLabels)
View(ActivityLabels)
ActivityLabels$V2[match(DF_y_test$V1,ActivityLabels$V1)]
names(DF_y_test) = "Activity_ID","Activity_Label"
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
## create a new column at y_test to represent activity label
DF_y_test[,2] = ActivityLabels$V2[match(DF_y_test$V1,ActivityLabels$V1)]
## Uses descriptive activity names to name the activities in the test data set
names(DF_subject_test) = "Subject"
names(DF_y_test) = c("Activity_ID","Activity_Label")
names(DF_X_test) = FeaturesLabels[,2]
View(DF_y_test)
View(DF_y_test)
View(ActivityLabels)
rm(list=ls())
DataFileName <- "getdata-projectfiles-UCI HAR Dataset.zip"
if (!file.exists(DataFileName)){
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, DataFileName)
}
## Unzip data if data folder doesn't exists:
if (!file.exists("UCI HAR Dataset")) {
unzip(DataFileName)
}
## Load activity labels from "activity_labels.txt"
ActivityLabels = read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
## Read features labels from "features.txt"
FeaturesLabels = read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
## Appropriately labels the data set with descriptive variable names
FeaturesLabels[,2] = gsub("-mean", "Mean", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub("-std", "STD", FeaturesLabels[,2])
FeaturesLabels[,2] = gsub("[()]", "", FeaturesLabels[,2])
## Load test data.
View(FeaturesLabels)
DF_subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
DF_y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
DF_X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
## create a new column at y_test to represent activity label
DF_y_test[,2] = ActivityLabels$V2[match(DF_y_test$V1,ActivityLabels$V1)]
View(DF_y_test)
## Uses descriptive activity names to name the activities in the test data set
names(DF_subject_test) = "Subject"
names(DF_y_test) = c("Activity_ID","Activity_Label")
names(DF_X_test) = FeaturesLabels[,2]
View(DF_y_test)
## pick only the the mean and standard deviation from each measurement of X_Test
required_features <- grepl("Mean|STD", FeaturesLabels[,2])
DF_X_test = DF_X_test[,required_features]
## combine all test data into one data frame
DF_CombinedTestData <- cbind(DF_subject_test, DF_y_test, DF_X_test)
View(DF_CombinedTestData)
## Load train data.
DF_subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
DF_y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
DF_X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
## create a new column at y_test to represent activity label
DF_y_train[,2] = ActivityLabels$V2[match(DF_y_train$V1,ActivityLabels$V1)]
View(DF_y_train)
## Uses descriptive activity names to name the activities in the train data set
names(DF_subject_train) = "Subject"
names(DF_y_train) = c("Activity_ID","Activity_Label")
names(DF_X_train) = FeaturesLabels[,2]
View(DF_y_train)
## pick only the the mean and standard deviation from each measurement of X_trian
DF_X_train = DF_X_train[,required_features]
## combine all train data into one data frame
DF_CombinedTrainData <- cbind(DF_subject_train, DF_y_train, DF_X_train)
## remove temporary elements
rm(DF_subject_test,DF_y_test,DF_X_test,DF_subject_train,DF_y_train,DF_X_train,ActivityLabels,FeaturesLabels,required_features,DataFileName)
# Merge test and train data
DF_CombinedData = rbind(DF_CombinedTestData, DF_CombinedTrainData)
View(DF_CombinedData)
## remove temporary elements
rm(DF_CombinedTestData, DF_CombinedTrainData)
View(DF_CombinedData)
id_labels   = c("Subject", "Activity_ID", "Activity_Label")
data_labels = setdiff(colnames(DF_CombinedData), id_labels)
melt_data = melt(DF_CombinedData, id = id_labels, measure.vars = data_labels)
View(melt_data)
tidy_data   = dcast(melt_data, subject + Activity_Label ~ variable, mean)
tidy_data   = dcast(melt_data, Subject + Activity_Label ~ variable, mean)
View(tidy_data)
View(melt_data)
View(melt_data)
ID_labels   = c("Subject", "Activity_ID", "Activity_Label")
Data_labels = setdiff(colnames(DF_CombinedData), ID_labels)
melt_data = melt(DF_CombinedData, id = ID_labels, measure.vars = Data_labels)
tidy_data = dcast(melt_data, Subject + Activity_Label ~ variable, mean)
View(tidy_data)
View(tidy_data)
rm(list=ls())
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
write.table(tidy_data, file = "tidy.txt", sep="\t")
View(DF_CombinedData)
View(tidy_data)
rm(list=ls())
source('~/GitHub/Getting-and-Cleaning-Data-Course-Project/run_analysis.R', echo=TRUE)
View(tidy_data)
View(tidy_data)
write.table(tidy_data, file = "tidy.txt", sep=",")
write.table(tidy_data, file = "tidy.txt")
test <- read.csv(tidy.txt)
test <- read.table("./tidy.txt")
View(test)
View(test)
View(test)
View(DF_CombinedData)
View(test)
test <- read.table("./tidy.txt")
View(test)
write.table(tidy_data, file = "tidy.txt",row.names = FALSE, quote = FALSE)
test <- read.table("./tidy.txt")
View(test)
